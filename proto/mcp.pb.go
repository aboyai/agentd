// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.1
// source: mcp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InstructionRequest sends a URI-based task to be interpreted and routed
type InstructionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                        // Used for memory-aware queries (llm://<session>.memory)
	Instruction   string                 `protobuf:"bytes,2,opt,name=instruction,proto3" json:"instruction,omitempty"`                                                                     // llm://... or tool://... or plan://...
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional context metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstructionRequest) Reset() {
	*x = InstructionRequest{}
	mi := &file_mcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstructionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionRequest) ProtoMessage() {}

func (x *InstructionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionRequest.ProtoReflect.Descriptor instead.
func (*InstructionRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{0}
}

func (x *InstructionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InstructionRequest) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *InstructionRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// InstructionResponse returns the result and trace of execution
type InstructionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`                                                                       // Final response or streamed chunk
	Trace         map[string]string      `protobuf:"bytes,2,rep,name=trace,proto3" json:"trace,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Execution trace: model used, tools invoked, etc.
	Complete      bool                   `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"`                                                                    // Set to true when stream is complete
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstructionResponse) Reset() {
	*x = InstructionResponse{}
	mi := &file_mcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstructionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionResponse) ProtoMessage() {}

func (x *InstructionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionResponse.ProtoReflect.Descriptor instead.
func (*InstructionResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{1}
}

func (x *InstructionResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *InstructionResponse) GetTrace() map[string]string {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *InstructionResponse) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

var File_mcp_proto protoreflect.FileDescriptor

const file_mcp_proto_rawDesc = "" +
	"\n" +
	"\tmcp.proto\x12\x03mcp\"\xd5\x01\n" +
	"\x12InstructionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12 \n" +
	"\vinstruction\x18\x02 \x01(\tR\vinstruction\x12A\n" +
	"\bmetadata\x18\x03 \x03(\v2%.mcp.InstructionRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc0\x01\n" +
	"\x13InstructionResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x129\n" +
	"\x05trace\x18\x02 \x03(\v2#.mcp.InstructionResponse.TraceEntryR\x05trace\x12\x1a\n" +
	"\bcomplete\x18\x03 \x01(\bR\bcomplete\x1a8\n" +
	"\n" +
	"TraceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xa4\x01\n" +
	"\x12InstructionService\x12D\n" +
	"\x0fSendInstruction\x12\x17.mcp.InstructionRequest\x1a\x18.mcp.InstructionResponse\x12H\n" +
	"\x11StreamInstruction\x12\x17.mcp.InstructionRequest\x1a\x18.mcp.InstructionResponse0\x01B\x0eZ\fagentd/protob\x06proto3"

var (
	file_mcp_proto_rawDescOnce sync.Once
	file_mcp_proto_rawDescData []byte
)

func file_mcp_proto_rawDescGZIP() []byte {
	file_mcp_proto_rawDescOnce.Do(func() {
		file_mcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)))
	})
	return file_mcp_proto_rawDescData
}

var file_mcp_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mcp_proto_goTypes = []any{
	(*InstructionRequest)(nil),  // 0: mcp.InstructionRequest
	(*InstructionResponse)(nil), // 1: mcp.InstructionResponse
	nil,                         // 2: mcp.InstructionRequest.MetadataEntry
	nil,                         // 3: mcp.InstructionResponse.TraceEntry
}
var file_mcp_proto_depIdxs = []int32{
	2, // 0: mcp.InstructionRequest.metadata:type_name -> mcp.InstructionRequest.MetadataEntry
	3, // 1: mcp.InstructionResponse.trace:type_name -> mcp.InstructionResponse.TraceEntry
	0, // 2: mcp.InstructionService.SendInstruction:input_type -> mcp.InstructionRequest
	0, // 3: mcp.InstructionService.StreamInstruction:input_type -> mcp.InstructionRequest
	1, // 4: mcp.InstructionService.SendInstruction:output_type -> mcp.InstructionResponse
	1, // 5: mcp.InstructionService.StreamInstruction:output_type -> mcp.InstructionResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mcp_proto_init() }
func file_mcp_proto_init() {
	if File_mcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mcp_proto_goTypes,
		DependencyIndexes: file_mcp_proto_depIdxs,
		MessageInfos:      file_mcp_proto_msgTypes,
	}.Build()
	File_mcp_proto = out.File
	file_mcp_proto_goTypes = nil
	file_mcp_proto_depIdxs = nil
}
